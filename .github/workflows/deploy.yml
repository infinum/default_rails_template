name: Deploy

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

on:
  workflow_call:
    inputs:
      # Sets the Mina environment (e.g. staging, production)
      # A task by the same name must exist in config/deploy.rb
      environment:
        required: true
        type: string

      # Sets the Git branch which will be checked out
      branch:
        required: true
        type: string

      # Determines who can manually trigger the workflow
      # Example: "@github_username1 @github_username2"
      # See: https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow
      deployers:
        required: false
        type: string
        default: ''

      # Sets BUNDLE_APP_CONFIG environment variable
      # See: https://bundler.io/man/bundle-config.1.html
      bundle_app_config:
        required: false
        type: string
        default: .bundle/ci-deploy

      # Selects the runner on which the workflow will run
      # See: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
      runner:
        required: false
        type: string
        default: ubuntu-20.04
    secrets:
      SSH_PRIVATE_KEY:
        required: true

      # Additional environment variables set in the workflow
      # Format: JSON object with string values (key becomes env variable name, value becomes env variable value)
      # Example: '{ "FOO": "BAR", "BAZ": "${{ secrets.BAZ }}" }' 
      ADDITIONAL_VARIABLES:
        required: false

jobs:
  deploy:
    name: Deploy
    runs-on: ${{ inputs.runner }}
    env:
      BUNDLE_APP_CONFIG: ${{ inputs.bundle_app_config }}
    if: ${{ github.event_name == 'workflow_dispatch' && contains(inputs.deployers, format('@{0}', github.actor)) || github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Set up additional environment variables
        env:
          ADDITIONAL_VARIABLES: ${{ secrets.ADDITIONAL_VARIABLES }}
        if: ${{ env.ADDITIONAL_VARIABLES }}
        run: >
          if echo '${{ env.ADDITIONAL_VARIABLES }}' | jq >/dev/null 2>&1; then
            echo '${{ env.ADDITIONAL_VARIABLES }}' | jq -r 'to_entries[] | "\(.key) \(.value)"' | \
              while read -r key value; do echo "$key=$value" >> $GITHUB_ENV && echo "Variable $key has been set"; done
          else
            echo "ADDITIONAL_VARIABLES secret you supplied is not a valid JSON object. Check the formatting of the secret."
            exit 1
          fi
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.branch }}
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Prepare SSH agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Deploy
        run: bin/deploy ${{ inputs.environment }}
